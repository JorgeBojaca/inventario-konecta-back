{"version":3,"sources":["ProductoForm.js","ProductosIndex.js","App.js","serviceWorker.js","index.js"],"names":["ProductoForm","props","state","id","nombre_producto","referencia","precio","peso","categoria","stock","errors","handleSubmit","bind","handleChange","handleIntChange","error","console","log","this","match","params","action","axios","get","process","then","res","setState","data","e","target","name","value","Number","val","content","pointing","title","Form","Input","required","label","onChange","to","Button","color","onClick","event","preventDefault","hasErrors","end_point","method","history","push","catch","err","response","React","Component","withRouter","ProductosIndex","productos","handleEdit","handleDelete","handleSale","idx","delete","splice","post","fecha_ultima_venta","elementTable","elements","length","i","producto","Table","Row","key","Cell","fecha_creacion","textAlign","disabled","size","pathname","icon","Icon","compact","celled","Header","HeaderCell","Body","App","Container","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gWAKMA,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,GAAI,GACJC,gBAAiB,GACjBC,WAAY,GACZC,OAAQ,GACRC,KAAM,GACNC,UAAW,GACXC,MAAQ,GACRC,OAAQ,CACJN,iBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,WAAW,EACXC,OAAQ,IAGhB,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAtBC,E,gEAwBE,IAAD,OACfI,QAAQC,MACR,IAAId,EAAKe,KAAKjB,MAAMkB,MAAMC,OAAOjB,GACR,WAAtBe,KAAKjB,MAAMoB,QACVC,IAAMC,IAAIC,yCAAiD,CACvDJ,OAAO,CACHjB,GAAIA,KAETsB,MAAK,SAAAC,GACJV,QAAQC,IAAIS,GACZ,EAAKC,SAAS,CACVxB,GAAIuB,EAAIE,KAAKzB,GACbC,gBAAiBsB,EAAIE,KAAKxB,gBAC1BC,WAAYqB,EAAIE,KAAKvB,WACrBC,OAAQoB,EAAIE,KAAKtB,OACjBC,KAAMmB,EAAIE,KAAKrB,KACfC,UAAWkB,EAAIE,KAAKpB,UACpBC,MAAQiB,EAAIE,KAAKnB,a,mCAKpBoB,GAAI,IAAD,IACUA,EAAEC,OAAjBC,EADK,EACLA,KAAMC,EADD,EACCA,MACTtB,EAAUQ,KAAKhB,MAAMQ,OACzBA,EAAOqB,IAAQ,EACfb,KAAKS,UAAL,mBAAgBI,EAAOC,GAAvB,uBAAqCtB,GAArC,M,sCAEYmB,GAAI,IAKF,EALC,EACKA,EAAEC,OAAjBC,EADU,EACVA,KAAMC,EADI,EACJA,MACPtB,EAAUQ,KAAKhB,MAAMQ,QACzBsB,EAAQC,OAAOD,GACftB,EAAOqB,IAAM,EACVC,GAAS,IACRd,KAAKS,UAAL,mBAAgBI,EAAOC,GAAvB,uBACItB,GADJ,M,4BAIFwB,GACF,GAAGhB,KAAKhB,MAAMQ,OAAOwB,GACjB,MAAO,CAAEC,QAAS,+BAAgCC,SAAU,W,+BAIhE,IAAIC,EAMJ,OAJIA,EADqB,WAAtBnB,KAAKjB,MAAMoB,OACF,8CAEJ,mDAEC,6BACJgB,EACD,kBAACC,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,kBACNV,KAAK,kBACLhB,MAAOG,KAAKH,MAAM,mBAClBiB,MAAOd,KAAKhB,MAAME,gBAClBsC,SAAUxB,KAAKL,eAEnB,kBAACyB,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,aACNV,KAAK,aACLhB,MAAOG,KAAKH,MAAM,cAClBiB,MAAOd,KAAKhB,MAAMG,WAClBqC,SAAUxB,KAAKL,eAGnB,kBAACyB,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,SACNV,KAAK,SACLhB,MAAOG,KAAKH,MAAM,UAClBiB,MAAOd,KAAKhB,MAAMI,OAClBoC,SAAUxB,KAAKJ,kBAGnB,kBAACwB,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,OACNV,KAAK,OACLhB,MAAOG,KAAKH,MAAM,QAClBiB,MAAOd,KAAKhB,MAAMK,KAClBmC,SAAUxB,KAAKJ,kBAGnB,kBAACwB,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,YACNV,KAAK,YACLhB,MAAOG,KAAKH,MAAM,aAClBiB,MAAOd,KAAKhB,MAAMM,UAClBkC,SAAUxB,KAAKL,eAGnB,kBAACyB,EAAA,EAAKC,MAAN,CAAYC,UAAQ,EAChBC,MAAM,QACNV,KAAK,QACLhB,MAAOG,KAAKH,MAAM,SAClBiB,MAAOd,KAAKhB,MAAMO,MAClBiC,SAAUxB,KAAKJ,kBAGnB,6BACI,kBAAC,IAAD,CAAM6B,GAAG,KAAI,kBAACC,EAAA,EAAD,kBACb,kBAACA,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS5B,KAAKP,cAAnC,gB,mCAKCoC,GAAO,IAAD,OACfA,EAAMC,iBACN,IAAItC,EAAS,CACTN,iBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,WAAW,EACXC,OAAQ,GAERwC,GAAY,EA8BhB,GA7BkC,KAA/B/B,KAAKhB,MAAME,kBACVM,EAAON,iBAAkB,EACzB6C,GAAY,GAEa,KAA1B/B,KAAKhB,MAAMG,aACVK,EAAOL,YAAa,EACpB4C,GAAY,GAEO,KAApB/B,KAAKhB,MAAMK,OACVG,EAAOH,MAAO,EACd0C,GAAY,GAEY,KAAzB/B,KAAKhB,MAAMM,YACVE,EAAOF,WAAW,EAClByC,GAAY,GAEQ,KAArB/B,KAAKhB,MAAMO,QACVC,EAAOD,OAAQ,EACfwC,GAAY,GAES,KAAtB/B,KAAKhB,MAAMI,SACVI,EAAOJ,QAAS,EAChB2C,GAAY,GAGhB/B,KAAKS,SAAS,CACVjB,OAAQA,KAGRuC,EAAU,CACV,IAAIC,EAAWC,EACXvB,EAAO,CACPxB,gBAAiBc,KAAKhB,MAAME,gBAC5BC,WAAYa,KAAKhB,MAAMG,WACvBC,OAAQY,KAAKhB,MAAMI,OACnBC,KAAMW,KAAKhB,MAAMK,KACjBC,UAAWU,KAAKhB,MAAMM,UACtBC,MAAQS,KAAKhB,MAAMO,OAGE,WAAtBS,KAAKjB,MAAMoB,QACV6B,EAAW,sBACXC,EAAQ,SAERD,EAAY,sBACZtB,EAAKzB,GAAKe,KAAKhB,MAAMC,GACrBgD,EAAQ,OAEZnC,QAAQC,IAAIW,GACZN,IAAM6B,GAAQ3B,yBAA8B0B,EAAUtB,GAAMH,MAAK,SAAAC,GACpC,WAAtB,EAAKzB,MAAMoB,QACVL,QAAQC,IAAI,2BACZ,EAAKhB,MAAMmD,QAAQC,KAAK,OAExBrC,QAAQC,IAAI,6BACZ,EAAKhB,MAAMmD,QAAQC,KAAK,MAE5B,EAAK1B,SAAS,CACVvB,gBAAiB,GACjBC,WAAY,GACZC,OAAQ,GACRC,KAAM,GACNC,UAAW,GACXC,MAAQ,QAEb6C,OAAM,SAAAC,GACLvC,QAAQC,IAAIsC,EAAIC,SAAS5B,c,GAjNd6B,IAAMC,WAwNlBC,cAAW3D,G,iBCrGX4D,E,kDAlHf,WAAY3D,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT2D,UAAU,IAId,EAAKC,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKmD,aAAe,EAAKA,aAAanD,KAAlB,gBACpB,EAAKoD,WAAa,EAAKA,WAAWpD,KAAhB,gBATJ,E,gEAWE,IAAD,OAEfU,IAAMC,IAAIC,6CAAqDC,MAAK,SAAAC,GAChEV,QAAQC,IAAIS,GACZ,EAAKC,SAAS,CAACkC,UAAWnC,EAAIE,Y,iCAG3BM,GACPhB,KAAKjB,MAAMmD,QAAQC,KAAK,W,mCAEfnB,EAAK+B,GAAK,IAAD,OAClB3C,IAAM4C,OAAO1C,4CAAoD,CAC7DJ,OAAO,CAACjB,GAAI+B,KACbT,MAAK,SAAAC,GACJ,IAAImC,EAAY,EAAK3D,MAAM2D,UAC3BA,EAAUM,OAAOF,EAAK,GACtB,EAAKtC,SAAS,CACVkC,mB,iCAKD3B,EAAI+B,GAAK,IAAD,OACXJ,EAAY3C,KAAKhB,MAAM2D,UAExBA,EAAUI,GAAKxD,MAAQ,IACtBoD,EAAUI,GAAKxD,OAAS,EAExBa,IAAM8C,KAAK5C,0CACP,CAACrB,GAAI+B,IACPT,MAAK,SAAAC,GACHmC,EAAUI,GAAKI,mBAAqB3C,EAAIE,KACxC,EAAKD,SAAS,CACVkC,iBAGLP,OAAM,SAAAC,GAAMvC,QAAQC,IAAIsC,EAAIC,SAAS5B,Y,+BAIvC,IAED0C,EAFA,OACAC,EAAW,GAEf,GAAGrD,KAAKhB,MAAM2D,UAAUW,OAAS,EAAE,CAE/B,IAFgC,IAAD,WAEvBC,GACJ,IAAIC,EAAW,EAAKxE,MAAM2D,UAAUY,GACpCF,EAASlB,KACL,kBAACsB,EAAA,EAAMC,IAAP,CAAWC,IAAKH,EAASvE,IACrB,kBAACwE,EAAA,EAAMG,KAAP,KAAaJ,EAAStE,iBACtB,kBAACuE,EAAA,EAAMG,KAAP,KAAaJ,EAASrE,YACtB,kBAACsE,EAAA,EAAMG,KAAP,KAAaJ,EAASpE,QACtB,kBAACqE,EAAA,EAAMG,KAAP,KAAaJ,EAASnE,MACtB,kBAACoE,EAAA,EAAMG,KAAP,KAAaJ,EAASlE,WACtB,kBAACmE,EAAA,EAAMG,KAAP,KAAaJ,EAASjE,OACtB,kBAACkE,EAAA,EAAMG,KAAP,KAAaJ,EAASK,gBACtB,kBAACJ,EAAA,EAAMG,KAAP,KAAaJ,EAASL,oBACtB,kBAACM,EAAA,EAAMG,KAAP,CAAaE,UAAU,UAAS,kBAACpC,EAAA,EAAD,CAAQqC,SAA6B,IAAnBP,EAASjE,MAAayE,KAAK,OAAOrC,MAAM,QAAQC,QAAS,kBAAI,EAAKkB,WAAWU,EAASvE,GAAGsE,KAA3G,WAChC,kBAACE,EAAA,EAAMG,KAAP,CAAYE,UAAU,UACd,kBAAC,IAAD,CAAMrC,GAAI,CAACwC,SAAS,SAAST,EAASvE,KAAK,kBAACyC,EAAA,EAAD,CAAQP,MAAM,SAAS6C,KAAK,OAAOE,MAAI,EAACvC,MAAM,QACjF,kBAACwC,EAAA,EAAD,CAAMtD,KAAK,WAInB,kBAACa,EAAA,EAAD,CAAQP,MAAM,WAAW6C,KAAK,OAAOE,MAAI,EAACvC,MAAM,MAAMC,QAAS,kBAAI,EAAKiB,aAAaW,EAASvE,GAAGsE,KAC7F,kBAACY,EAAA,EAAD,CAAMtD,KAAK,gBApB3B0C,EAAE,EAAGA,EAAEvD,KAAKhB,MAAM2D,UAAUW,OAAQC,IAAK,EAAzCA,GAyBRH,EACI,kBAACK,EAAA,EAAD,CAAOW,SAAO,EAACC,QAAM,GACjB,kBAACZ,EAAA,EAAMa,OAAP,KACI,kBAACb,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAMc,WAAP,eACA,kBAACd,EAAA,EAAMc,WAAP,mBACA,kBAACd,EAAA,EAAMc,WAAP,eACA,kBAACd,EAAA,EAAMc,WAAP,aACA,kBAACd,EAAA,EAAMc,WAAP,kBACA,kBAACd,EAAA,EAAMc,WAAP,cACA,kBAACd,EAAA,EAAMc,WAAP,0BACA,kBAACd,EAAA,EAAMc,WAAP,wBACA,kBAACd,EAAA,EAAMc,WAAP,MACA,kBAACd,EAAA,EAAMc,WAAP,QAGR,kBAACd,EAAA,EAAMe,KAAP,KACKnB,SAIbD,EAAe,6DAEnB,OAAQ,6BACJ,uDACA,kBAAC,IAAD,CAAM3B,GAAG,WAAT,oBACC2B,O,GA5GoBb,IAAMC,W,SC+BpBiC,MAzBf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,KACA,kBAAC,IAAD,KACA,6BAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,CAAcxE,OAAO,YAEvB,kBAAC,IAAD,CAAOwE,KAAK,aACV,kBAAC,EAAD,CAAcxE,OAAO,YAEvB,kBAAC,IAAD,CAAOwE,KAAK,KACV,kBAAC,EAAD,aCdQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9E,MACvB,2D,OCXN+E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAAAiF,GACJA,EAAaC,gBAEdrD,OAAM,SAAAvC,GACLC,QAAQD,MAAMA,EAAM6F,c","file":"static/js/main.38fcee49.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass ProductoForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            nombre_producto: '',\r\n            referencia: '',\r\n            precio: '',\r\n            peso: '',\r\n            categoria: '',\r\n            stock : '',\r\n            errors: {\r\n                nombre_producto:false,\r\n                referencia: false,\r\n                precio: false,\r\n                peso: false,\r\n                categoria: false,\r\n                stock : false,\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleIntChange = this.handleIntChange.bind(this);\r\n        this.error = this.error.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        console.log();\r\n        let id = this.props.match.params.id;\r\n        if(this.props.action === 'update'){\r\n            axios.get(process.env.REACT_APP_API_URL+'api/producto/get',{\r\n                params:{\r\n                    id: id,\r\n                }\r\n            }).then(res=>{\r\n                console.log(res);\r\n                this.setState({\r\n                    id: res.data.id,\r\n                    nombre_producto: res.data.nombre_producto,\r\n                    referencia: res.data.referencia,\r\n                    precio: res.data.precio,\r\n                    peso: res.data.peso,\r\n                    categoria: res.data.categoria,\r\n                    stock : res.data.stock\r\n                });\r\n            })\r\n        }\r\n    }\r\n    handleChange(e) {  \r\n        const {name, value} = e.target;\r\n        let errors =  this.state.errors;\r\n        errors[name] = false;\r\n        this.setState({[name]: value, errors:errors});\r\n    }\r\n    handleIntChange(e) {  \r\n        let {name, value} = e.target;\r\n        let errors =  this.state.errors;\r\n        value = Number(value);\r\n        errors[name]=false;\r\n        if(value >= 0){\r\n            this.setState({[name]: value,\r\n                errors});\r\n        }\r\n    }\r\n    error(val){\r\n        if(this.state.errors[val]){\r\n            return { content: 'Por favor ingrese este campo', pointing: 'below' };\r\n        }\r\n    }\r\n    render(){\r\n        let title;\r\n        if(this.props.action === 'create'){\r\n            title = <h1>Crear Producto</h1>;\r\n        }else{\r\n        title = <h1>Actualizar Producto</h1>;\r\n        }\r\n        return ( <div>\r\n            {title}\r\n            <Form>\r\n            <Form.Input required\r\n                label=\"Nombre Producto\"\r\n                name='nombre_producto'\r\n                error={this.error('nombre_producto')}\r\n                value={this.state.nombre_producto}\r\n                onChange={this.handleChange}>\r\n            </Form.Input>\r\n            <Form.Input required\r\n                label=\"Referencia\"\r\n                name='referencia'\r\n                error={this.error('referencia')}\r\n                value={this.state.referencia}\r\n                onChange={this.handleChange}>\r\n\r\n            </Form.Input>\r\n            <Form.Input required\r\n                label=\"Precio\"\r\n                name='precio'\r\n                error={this.error('precio')}\r\n                value={this.state.precio}\r\n                onChange={this.handleIntChange}>\r\n\r\n            </Form.Input>\r\n            <Form.Input required\r\n                label=\"Peso\"\r\n                name='peso'\r\n                error={this.error('peso')}\r\n                value={this.state.peso}\r\n                onChange={this.handleIntChange}>\r\n\r\n            </Form.Input>\r\n            <Form.Input required\r\n                label=\"Categoria\"\r\n                name='categoria'\r\n                error={this.error('categoria')}\r\n                value={this.state.categoria}\r\n                onChange={this.handleChange}>\r\n\r\n            </Form.Input>\r\n            <Form.Input required\r\n                label=\"Stock\"\r\n                name='stock'\r\n                error={this.error('stock')}\r\n                value={this.state.stock}\r\n                onChange={this.handleIntChange}>\r\n\r\n            </Form.Input>\r\n            <div>\r\n                <Link to=\"/\"><Button>Cancelar</Button></Link>\r\n                <Button color=\"blue\" onClick={this.handleSubmit}>Guardar</Button>\r\n            </div>\r\n            \r\n        </Form></div>);\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let errors = {\r\n            nombre_producto:false,\r\n            referencia: false,\r\n            precio: false,\r\n            peso: false,\r\n            categoria: false,\r\n            stock : false\r\n        };\r\n        let hasErrors = false;\r\n        if(this.state.nombre_producto === ''){\r\n            errors.nombre_producto = true;\r\n            hasErrors = true;\r\n        }\r\n        if(this.state.referencia === ''){\r\n            errors.referencia = true;\r\n            hasErrors = true;\r\n        }\r\n        if(this.state.peso === ''){\r\n            errors.peso = true;\r\n            hasErrors = true;\r\n        }\r\n        if(this.state.categoria === '' ){\r\n            errors.categoria= true;\r\n            hasErrors = true;\r\n        }\r\n        if(this.state.stock === ''){\r\n            errors.stock = true;\r\n            hasErrors = true;\r\n        }\r\n        if(this.state.precio === ''){\r\n            errors.precio = true;\r\n            hasErrors = true;\r\n        }\r\n\r\n        this.setState({\r\n            errors: errors\r\n        });\r\n\r\n        if(!hasErrors){\r\n            let end_point, method;\r\n            let data = {\r\n                nombre_producto: this.state.nombre_producto,\r\n                referencia: this.state.referencia,\r\n                precio: this.state.precio,\r\n                peso: this.state.peso,\r\n                categoria: this.state.categoria,\r\n                stock : this.state.stock\r\n            }\r\n\r\n            if(this.props.action === 'create'){\r\n                end_point ='api/producto/create';\r\n                method= 'post';\r\n            } else{\r\n                end_point = 'api/producto/update';\r\n                data.id = this.state.id;\r\n                method= 'put';\r\n            }\r\n            console.log(data);\r\n            axios[method](process.env.REACT_APP_API_URL+end_point,data).then(res=>{\r\n                if(this.props.action === 'create'){\r\n                    console.log(\"Agregados correctamente\");\r\n                    this.props.history.push('/');\r\n                }else{\r\n                    console.log(\"Actualizado correctamente\");\r\n                    this.props.history.push('/');\r\n                }\r\n                this.setState({\r\n                    nombre_producto: '',\r\n                    referencia: '',\r\n                    precio: '',\r\n                    peso: '',\r\n                    categoria: '',\r\n                    stock : '',\r\n                });\r\n            }).catch(err=>{\r\n                console.log(err.response.data);\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(ProductoForm);","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Table, Button, Icon} from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProductosIndex extends React.Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        productos:[]\r\n    }\r\n    // const {history} = this.props;\r\n\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleSale = this.handleSale.bind(this);\r\n}\r\ncomponentDidMount(){\r\n    \r\n    axios.get(process.env.REACT_APP_API_URL+'api/producto/getAll').then(res=>{\r\n        console.log(res);\r\n        this.setState({productos: res.data});\r\n    })\r\n}\r\nhandleEdit(val){\r\n    this.props.history.push(\"/edit\");\r\n}\r\nhandleDelete(val, idx){\r\n    axios.delete(process.env.REACT_APP_API_URL+'api/producto/delete',{\r\n        params:{id: val}\r\n    }).then(res=>{\r\n        let productos = this.state.productos;\r\n        productos.splice(idx, 1);\r\n        this.setState({\r\n            productos\r\n        })\r\n\r\n    });\r\n}\r\nhandleSale(val,idx){\r\n    let productos = this.state.productos;\r\n\r\n    if(productos[idx].stock > 0){\r\n        productos[idx].stock -= 1; \r\n        \r\n        axios.post(process.env.REACT_APP_API_URL+'api/producto/sale',\r\n            {id: val}\r\n        ).then(res=>{\r\n            productos[idx].fecha_ultima_venta = res.data;\r\n            this.setState({\r\n                productos\r\n            });\r\n    \r\n        }).catch(err=>{console.log(err.response.data)});\r\n    }\r\n}\r\n\r\nrender(){\r\n    let elements = [];\r\n    let elementTable;\r\n    if(this.state.productos.length > 0){\r\n\r\n        for(let i=0; i<this.state.productos.length; i++){\r\n            let producto = this.state.productos[i];\r\n            elements.push(\r\n                <Table.Row key={producto.id}>\r\n                    <Table.Cell>{producto.nombre_producto}</Table.Cell>\r\n                    <Table.Cell>{producto.referencia}</Table.Cell>\r\n                    <Table.Cell>{producto.precio}</Table.Cell>\r\n                    <Table.Cell>{producto.peso}</Table.Cell>\r\n                    <Table.Cell>{producto.categoria}</Table.Cell>\r\n                    <Table.Cell>{producto.stock}</Table.Cell>\r\n                    <Table.Cell>{producto.fecha_creacion}</Table.Cell>\r\n                    <Table.Cell>{producto.fecha_ultima_venta}</Table.Cell>\r\n                    <Table.Cell  textAlign='center'><Button disabled={producto.stock === 0} size=\"mini\" color=\"green\" onClick={()=>this.handleSale(producto.id,i)}>Vender</Button></Table.Cell>\r\n                    <Table.Cell textAlign='center'>\r\n                            <Link to={{pathname:'/edit/'+producto.id}}><Button title=\"Editar\" size=\"mini\" icon color=\"blue\">\r\n                                    <Icon name=\"edit\">\r\n                                    </Icon>\r\n                                </Button>\r\n                            </Link> \r\n                            <Button title=\"Eliminar\" size=\"mini\" icon color=\"red\" onClick={()=>this.handleDelete(producto.id,i)}>\r\n                                <Icon name=\"delete\"></Icon>\r\n                            </Button> \r\n                    </Table.Cell>\r\n                </Table.Row>);\r\n        }\r\n        elementTable = (\r\n            <Table compact celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n                        <Table.HeaderCell>Referencia</Table.HeaderCell>\r\n                        <Table.HeaderCell>Precio</Table.HeaderCell>\r\n                        <Table.HeaderCell>Peso</Table.HeaderCell>\r\n                        <Table.HeaderCell>Categoria</Table.HeaderCell>\r\n                        <Table.HeaderCell>Stock</Table.HeaderCell>\r\n                        <Table.HeaderCell>Fecha Creación</Table.HeaderCell>\r\n                        <Table.HeaderCell>Última Venta</Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {elements}\r\n                </Table.Body>\r\n        </Table>)\r\n    }else{\r\n        elementTable = <h3>No hay productos registrados.</h3>\r\n    }\r\n    return (<div>\r\n        <h1>Inventario de Productos</h1>\r\n        <Link to=\"/create\">Agregar Producto</Link>\r\n        {elementTable}\r\n\r\n    </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default ProductosIndex;","import React from 'react';\nimport ProductoForm from './ProductoForm';\nimport ProductosIndex from './ProductosIndex';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Container } from 'semantic-ui-react'\n\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n      <Router>\n      <div>\n\n        <Switch>\n          <Route path=\"/create\">\n            <ProductoForm action=\"create\" />\n          </Route>\n          <Route path=\"/edit/:id\">\n            <ProductoForm action=\"update\"/>\n          </Route>\n          <Route path=\"/\">\n            <ProductosIndex />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}